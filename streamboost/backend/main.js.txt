from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import List
import requests
import os

app = FastAPI()

# Модель для данных стримера
class Streamer(BaseModel):
    id: int
    name: str
    platform: str
    followers: int

# Пример базы данных (в реальности используйте PostgreSQL)
fake_db = []

# Twitch API credentials
CLIENT_ID = os.getenv("TWITCH_CLIENT_ID")
ACCESS_TOKEN = os.getenv("TWITCH_ACCESS_TOKEN")

# Получение токена доступа
def get_access_token():
    params = {
        "client_id": CLIENT_ID,
        "client_secret": os.getenv("TWITCH_CLIENT_SECRET"),
        "grant_type": "client_credentials"
    }
    response = requests.post("https://id.twitch.tv/oauth2/token", params=params)
    return response.json().get("access_token")

# Получение информации о стримере
@app.get("/twitch/streamer/{username}")
def get_twitch_streamer(username: str):
    token = get_access_token()
    headers = {
        "Client-ID": CLIENT_ID,
        "Authorization": f"Bearer {token}"
    }
    response = requests.get(f"https://api.twitch.tv/helix/users?login={username}", headers=headers)
    if response.status_code != 200:
        raise HTTPException(status_code=404, detail="Streamer not found")
    return response.json()

# Роут для добавления стримера
@app.post("/streamers/", response_model=Streamer)
def create_streamer(streamer: Streamer):
    fake_db.append(streamer)
    return streamer

# Роут для получения всех стримеров
@app.get("/streamers/", response_model=List[Streamer])
def get_streamers():
    return fake_db